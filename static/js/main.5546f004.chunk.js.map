{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Filter/Filter.module.css","index.module.css","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","makeCardRequest","makeCardSuccess","makeCardError","deleteCardRequest","deleteCardSuccess","deleteCardError","filterValue","axios","defaults","baseURL","name","number","dispatch","contact","text","actions","post","then","data","catch","error","id","delete","a","get","getFilter","state","phonebook","filter","getAllContacts","contacts","getLoading","loading","getVisibleContacts","createSelector","normalize","toLowerCase","includes","Form","loginId","uuidv4","telId","handleChange","e","setState","target","value","formSubmit","preventDefault","oldCard","props","find","newCard","alert","onSubmit","reset","className","styles","title","form","this","type","pattern","required","onChange","input","button","Component","connect","phonebookSelectors","phonebookOperations","phonebookActions","onDeleteCard","list","map","item","content","onClick","App","fetchContacts","section","ContactForm","isLoadingContacts","makeCard","contactsReducer","createReducer","_","payload","filterReducer","rootReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5546f004.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactList_button__1r4dL\",\"item\":\"ContactList_item__2ip0g\",\"list\":\"ContactList_list__1Bl6n\",\"content\":\"ContactList_content__DG7Vr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Filter_form__17oru\",\"input\":\"Filter_input__1ThZc\",\"title\":\"Filter_title__2vOxJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"src_section__31QU4\",\"title\":\"src_title__1DDGq\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchContactsRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchContactsSuccess');\nconst fetchContactsError = createAction('contacts/fetchContactsError');\n\nconst makeCardRequest = createAction('contacts/makeCardRequest');\nconst makeCardSuccess = createAction('contacts/makeCardSuccess');\nconst makeCardError = createAction('contacts/makeCardError');\n\nconst deleteCardRequest = createAction('contacts/deleteCardRequest');\nconst deleteCardSuccess = createAction('contacts/deleteCardSuccess');\nconst deleteCardError = createAction('contacts/deleteCardError');\n\nconst filterValue = createAction('contacts/filter');\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  makeCardRequest,\n  makeCardSuccess,\n  makeCardError,\n  deleteCardRequest,\n  deleteCardError,\n  deleteCardSuccess,\n  filterValue,\n\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n};\n","import axios from 'axios';\nimport actions from './phonebook-actions';\naxios.defaults.baseURL = 'http://localhost:3000';\n\nconst fetchContacts = () => async dispatch => {\n  dispatch(actions.fetchContactsSuccess());\n  try {\n    const { data } = await axios.get(`/contacts`);\n\n    dispatch(actions.fetchContactsSuccess(data));\n  } catch (error) {\n    dispatch(actions.fetchContactsError(error));\n  }\n  //   axios\n  //     .get(`/contacts`)\n  //     .then(({ data }) => dispatch(actions.fetchContactsSuccess(data)))\n  //     .catch(error => dispatch(actions.fetchContactsError(error)));\n};\n\nconst makeCard = (name, number) => dispatch => {\n  const contact = { text: name, number };\n\n  dispatch(actions.makeCardRequest());\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(actions.makeCardSuccess(data)))\n    .catch(error => dispatch(actions.makeCardError(error)));\n};\n\nconst deleteCard = id => dispatch => {\n  dispatch(actions.deleteCardRequest());\n  axios\n    .delete(`/contacts/${id}`)\n    .then(() => dispatch(actions.deleteCardSuccess(id)))\n    .catch(error => dispatch(actions.deleteCardError(error)));\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { makeCard, deleteCard, fetchContacts };\n","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.phonebook.loading;\n// const getContacts = state => state.phonebook.contacts;\nconst getFilter = state => state.phonebook.filter;\nconst getAllContacts = state => state.phonebook.contacts;\n// const getVisibleContacts = state => {\n//   const filter = getFilter(state);\n//   const contacts = getAllContacts(state);\n//   const normalize = filter.toLowerCase();\n//   return contacts.filter(({ text }) => text.toLowerCase().includes(normalize));\n// };\n\nconst getVisibleContacts = createSelector(\n  [getFilter, getAllContacts],\n  (filter, contacts) => {\n    const normalize = filter.toLowerCase();\n\n    return contacts.filter(({ text }) =>\n      text.toLowerCase().includes(normalize),\n    );\n    // return contacts;\n  },\n);\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default { getLoading, getAllContacts, getFilter, getVisibleContacts };\n","import React, { Component } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { connect } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { phonebookOperations, phonebookSelectors } from '../../redux/phonebook';\nclass Form extends Component {\n  loginId = uuidv4();\n  telId = uuidv4();\n  state = {\n    name: '',\n    number: '',\n  };\n  handleChange = e => {\n    this.setState({ [e.target.name]: e.target.value });\n  };\n  formSubmit = e => {\n    e.preventDefault();\n    const { name } = this.state;\n    const contacts = this.props.contacts;\n\n    const oldCard = contacts.find(\n      newCard => name.toLowerCase() === newCard.text.toLowerCase(),\n    );\n\n    if (oldCard) {\n      alert(`${oldCard.text}  is already in contacts`);\n      return;\n    }\n\n    this.props.onSubmit(this.state.name, this.state.number);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n  render() {\n    return (\n      <div>\n        <h3 className={styles.title}>Name</h3>\n        <form className={styles.form} onSubmit={this.formSubmit}>\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={this.loginId}\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n          <h3 className={styles.title}>Number</h3>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={this.telId}\n            value={this.state.number}\n            pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n            title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            className={styles.input}\n          />\n          <br />\n          <button type=\"submit\" className={styles.button}>\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = state => ({\n  contacts: phonebookSelectors.getAllContacts(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (name, number) =>\n    dispatch(phonebookOperations.makeCard(name, number)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { phonebookActions, phonebookSelectors } from '../../redux/phonebook';\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.form}>\n      <label>\n        <p className={styles.title}>Filter</p>\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  value: phonebookSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(phonebookActions.filterValue(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport { phonebookOperations, phonebookSelectors } from '../../redux/phonebook';\nimport { connect } from 'react-redux';\nconst ContactList = ({ contacts, onDeleteCard }) => {\n  return (\n    <div>\n      <ul className={styles.list}>\n        {contacts.map(({ id, text, number }) => (\n          <li key={id} className={styles.item}>\n            <p className={styles.content}>\n              {text} : {number}\n            </p>\n            <button className={styles.button} onClick={() => onDeleteCard(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\n// const getVisible = (allContacts, filter) => {\n//   const normalize = filter.toLowerCase();\n//   return allContacts.filter(({ text }) =>\n//     text.toLowerCase().includes(normalize),\n//   );\n// };\n\nconst mapStateToProps = state => {\n  return { contacts: phonebookSelectors.getVisibleContacts(state) };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  onDeleteCard: id => dispatch(phonebookOperations.deleteCard(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  onDeleteCard: PropTypes.func.isRequired,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContactForm from './components/ContactForm';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport styles from './index.module.css';\n\nimport { phonebookOperations, phonebookSelectors } from './redux/phonebook';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div className={styles.section}>\n        <h1 className={styles.title}>Phonebook</h1>\n        <ContactForm />\n\n        <h2 className={styles.title}>Contacts</h2>\n        <Filter />\n        {this.props.isLoadingContacts && <h2>Loading</h2>}\n        <ContactList />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  contacts: phonebookSelectors.getAllContacts(state),\n  isLoadingContacts: phonebookSelectors.getLoading(state),\n});\nconst mapDispatchToProps = dispatch => ({\n  makeCard: text => dispatch(phonebookOperations.makeCard(text)),\n  fetchContacts: () => dispatch(phonebookOperations.fetchContacts()),\n});\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { combineReducers } from 'redux';\n\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phonebook-actions';\nconst {\n  makeCardRequest,\n  makeCardSuccess,\n  makeCardError,\n  deleteCardRequest,\n  deleteCardError,\n  deleteCardSuccess,\n  filterValue,\n\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n} = actions;\n\nconst contactsReducer = createReducer([], {\n  [fetchContactsSuccess]: (_, { payload }) => payload,\n\n  [makeCardSuccess]: (state, { payload }) => [...state, payload],\n  [deleteCardSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [makeCardRequest]: () => true,\n  [makeCardSuccess]: () => false,\n  [makeCardError]: () => false,\n  [deleteCardRequest]: () => true,\n  [deleteCardSuccess]: () => false,\n  [deleteCardError]: () => false,\n});\n\nconst filterReducer = createReducer('', {\n  [filterValue]: (_, { payload }) => payload,\n});\n\nconst rootReducer = combineReducers({\n  contacts: contactsReducer,\n  filter: filterReducer,\n  loading,\n});\n\nexport default rootReducer;\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport logger from 'redux-logger';\n\nimport contactsReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: { phonebook: contactsReducer },\n  devTools: process.env.NODE_ENV === 'development',\n  middleware,\n});\n\n// const persistor = persistStore(store);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport store from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={store.persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"ContactForm_button__3jxgW\",\"title\":\"ContactForm_title__1X2px\",\"form\":\"ContactForm_form__1hXfB\",\"input\":\"ContactForm_input__2rawQ\"};"],"sourceRoot":""}